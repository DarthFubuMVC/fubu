<!--Title: New Solutions and Code Trees-->
<!--Url: new-solutions-and-code-trees-->

<Section title="Solution Layout" id="layout">
Let's say you open a command prompt and type <code>fubu new MyNewApp</code>. 
At the end of the command you should have a new <code>MyNewApp</code> folder that looks like this:

* rakefile
* .gitignore
* Gemfile - we use a handful of command line tools and Ruby libraries in the build that are distributed as gems
* instructions.txt
* ripple.config - configures the Nuget feeds and policies for this solution
* VERSION.txt - crude way we use to declare the current version of the libraries and applications in the codebase
* /src - you can change this, but we typically use "src" to hold all the source code for a code repository
* /src/MyNewApp.sln
* /src/MyNewApp
* /src/MyNewApp.Testing - testing library for the MyNewApp application
</Section>

TODO(Link to FubuTestingSupport somewhere here.) 

<Section title="FubuMVC Applications" id="fubumvc-app">
The default for <code>fubu new</code> is a brand new FubuMVC application, so the basic usage is:

<pre>
fubu new MyApp
</pre>

The default choices will build out a new FubuMVC application that uses <ProjectLink name="StructureMap /> as the IoC container, 
*no view engines*, and the VS.Net web server as your "F5" development server.  You will however, get rake tasks in your build
script for running your new application with Katana hosting.

See <TopicLink name="hosting" /> for more information.

The rake tasks for your newly generated FubuMVC solution should be:

<pre>
rake ci                # Target used for the CI server
rake clean             # Prepares the working directory for a new build
rake compile           # Compiles the solution src/MyApp.sln
rake default           # **Default**, compiles and runs tests
rake docs:bottle       # 'Bottles' up a single project in the solution with...
rake docs:run          # Runs a documentation project hosted in FubuWorld
rake docs:run_chrome   # Runs the documentation projects in this solution i...
rake docs:run_firefox  # Runs the documentation projects in this solution i...
rake docs:snippets     # Gathers up code snippets from the solution into th...
rake myapp:alias       # Add the alias for src/MyApp
rake myapp:chrome      # run the application with Katana hosting and 'watch...
rake myapp:firefox     # run the application with Katana hosting and 'watch...
rake myapp:restart     # touch the web.config file to force ASP.Net hosting...
rake myapp:run         # run the application with Katana hosting
rake ripple:history    # creates a history file for nuget dependencies
rake ripple:package    # packages the nuget files from the nuspec files in ...
rake ripple:restore    # Restores nuget package files and updates all float...
rake ripple:update     # Updates nuget package files to the latest
rake sln               # Open solution src/MyApp.sln
rake unit_test         # Runs unit tests for MyApp.Testing
rake version           # Update the version information for the build
</pre>

When you look in the code for the new <ProjectLink name="FubuMVC" /> application, you'll see these things:
* An <code>IApplicationSource</code> class that specifies how your application is bootstrapped
* A <code>FubuRegistry</code> class
* A StructureMap Registry class
* A class named <code>HomeEndpoint</code> that represents the root url or home page of your new application 
* <code>Global.asax.cs</code> to bootstrap FubuMVC for ASP.Net hosting

At this point, you should be able to simply press _F5_ and run the application with the home page coming up as text with instructions about how to get started with the code in your new application.
</Section>

<Section title="FubuMVC Application with the Spark View Engine" id="spark">
<pre>
fubu new MyApp --options spark
</pre>
</Section>

<Section title="FubuMVC Application with the Razor View Engine" id="spark">
<pre>
fubu new MyApp --options razor
</pre>
</Section>

<Section title="FubuMVC Bottles" id="fubumvc-bottle">
You can generate a new solution for an <ProjectLink name="FubuMVC" /> Bottle with this usage:

<pre>
fubu new MyFeatureBottle web-bottle
</pre>

This generation will add an 


</Section>

<Section title="Simple Class Libraries" id="library">

</Section>

<Section title="FubuTransportation Service" id="service">

</Section>

<markdown>
TODO(Write some content!)
</markdown>

<Command app="fubu" command="new">

</Command>

